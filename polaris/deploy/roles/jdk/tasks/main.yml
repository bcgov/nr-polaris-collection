---
- name: 'Set jdk_archive_url based on jdk_major_version'
  set_fact:
    jdk_archive_url: 'https://download.oracle.com/java/{{ jdk_major_version }}/latest/jdk-{{ jdk_major_version }}_linux-x64_bin.tar.gz'

- name: 'jdk_cacerts_file'
  set_fact:
    jdk_cacerts_file: '{{ jdk_home }}/lib/security/cacerts'

- name: 'Directory {{ jdk_home }}'
  file:
    path: "{{ jdk_home }}"
    state: directory
    mode: '0755'
  become:  yes
  become_user: "{{ jdk_install_as }}"

- name: Show JDK download URL info
  debug:
    var: jdk_archive_url

- uri:
    url: "{{ jdk_archive_url + '.sha256' }}"
    return_content: true
  environment: "{{ (proxy_env_dev_test if proxy_env == 'dev' or proxy_env == 'test') or (proxy_env_prod if proxy_env == 'prod') | default({}) }}"
  register: jdk_sha256

- name: Get JDK Checksum
  set_fact:
    jdk_checksum: "{{ jdk_sha256.content }}"

- name: Show Checksum
  debug:
    var: jdk_checksum

- name: Download JDK archive
  get_url:
    url: "{{ jdk_archive_url }}"
    dest: "/tmp/{{ jdk_archive_url | basename }}"
    checksum: "{{ jdk_checksum }}"
    validate_certs: false
    timeout: 1000
  environment: "{{ (proxy_env_dev_test if proxy_env == 'dev' or proxy_env == 'test') or (proxy_env_prod if proxy_env == 'prod') | default({}) }}"
  become: yes
  become_user: "{{ jdk_install_as }}"

- name: 'Extract JDK archive'
  unarchive:
    src: "/tmp/{{ jdk_archive_url | basename }}"
    dest: "{{ jdk_install_root }}"
    extra_opts: ['--transform=s,/*[^/]*,{{ jdk_install_dir | basename }},i', '--show-stored-names']
    remote_src: yes
  become: yes
  become_user: "{{ jdk_install_as }}"

- name: 'Download IMB trust certs'
  get_url:
    url: "{{ item.url }}"
    dest: "{{ jdk_home }}"
    validate_certs: false
    timeout: 100
  with_items: "{{ jdk_certs }}"
  become: yes
  become_user: "{{ jdk_install_as }}"

- name: 'Import certs'
  java_cert:
    cert_path: "{{ jdk_home }}/{{ item.name }}"
    cert_alias: "{{ item.alias | default(item.name) }}"
    executable: "{{ jdk_keytool }}"
    keystore_pass: "{{ jdk_cacerts_pass }}"
    keystore_path: "{{ jdk_cacerts_file }}"
  with_items: "{{ jdk_certs }}"
  become: yes
  become_user: "{{ jdk_install_as }}"

- name: 'Download JCE to /tmp/{{ jdk_jce_archive }}'
  get_url:
    url: "{{ jdk_jce_download_url }}"
    dest: "/tmp/{{ jdk_jce_archive }}"
    validate_certs: false
    timeout: 100
    mode: '0777'
  become: yes
  become_user: "{{ jdk_install_as }}"
  when: jdk_major_version == '8'

- name: 'Extract JCE JARs to {{ jdk_home }}/jre/lib/security/'
  shell: unzip -j -o /tmp/{{ jdk_jce_archive }} '*.jar'
  args:
    chdir: "{{ jdk_home }}/jre/lib/security/"
  become: yes
  become_user: "{{ jdk_install_as }}"
  when: jdk_major_version == '8'
