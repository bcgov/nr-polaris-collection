---
# tasks file for cd-prepare 

# We don't want the app directory to be cleaned if the Tomcat artifact is unavailable. 
- name: Check Tomcat download URL and fail if not status 200
  uri:
    url: "{{ tomcat_version.url }}"
    url_username: "{{ tomcat_download_username }}"
    url_password: "{{ tomcat_download_password }}"
    method: HEAD
  register: uri_test
  # fail with error if status is unexpected
  failed_when: uri_test.status is undefined or uri_test.status != 200
  when: validate_tomcat_url is defined
  
- name: show install dir path
  debug:
    msg: "cd_app_install: {{ cd_app_install }}"

- name: directories are clean
  file:
    path: "{{ cd_app_install }}"
    state: absent
  become: yes
  become_user: "{{ cdprep_become }}"
  when: not cdprep_skip_cleanup

- name: application directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "{{ cdprep_mode }}"
  become: yes
  become_user: "{{ cdprep_become }}"
  with_items:
    - "{{ cd_app_container }}"
    - "{{ cd_app_home }}"
    - "{{ cd_app_install }}"
    - "{{ cd_app_data }}"
    - "{{ cd_app_logs }}"
    - "{{ cd_app_service }}"
  tags:
    - 'always'

#- name: save deployment details for CMDB callback
#  set_fact:
#    cmdb_deployment: 
#      project: "{{ cd_project }}"
#      component: "{{ cd_component }}"
#      build_number: "{{ cd_build_number }}"
#      install_dir: "{{ cd_app_install }}"
#      logs_dir: "{{ cd_app_logs }}"
#      data_dir: "{{ cd_app_data }}"
#      timestamp: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
#  tags:
#    - 'always'
